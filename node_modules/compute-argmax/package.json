{
  "_args": [
    [
      {
        "raw": "compute-argmax@^1.0.0",
        "scope": null,
        "escapedName": "compute-argmax",
        "name": "compute-argmax",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/utkarsh/websites/node/mnist_keras_node"
    ]
  ],
  "_from": "compute-argmax@>=1.0.0 <2.0.0",
  "_id": "compute-argmax@1.0.0",
  "_inCache": true,
  "_location": "/compute-argmax",
  "_npmUser": {
    "name": "kgryte",
    "email": "kgryte@gmail.com"
  },
  "_npmVersion": "1.5.0-alpha-1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "compute-argmax@^1.0.0",
    "scope": null,
    "escapedName": "compute-argmax",
    "name": "compute-argmax",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/compute-argmax/-/compute-argmax-1.0.0.tgz",
  "_shasum": "3cbaf6513fa85ef9dd81c7ab789bb0a6957fb604",
  "_shrinkwrap": null,
  "_spec": "compute-argmax@^1.0.0",
  "_where": "/home/utkarsh/websites/node/mnist_keras_node",
  "author": {
    "name": "Athan Reines",
    "email": "kgryte@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/compute-io/argmax/issues"
  },
  "contributors": [
    {
      "name": "Athan Reines",
      "email": "kgryte@gmail.com"
    }
  ],
  "dependencies": {},
  "description": "Computes the maximum value of a numeric array and returns the corresponding array indices.",
  "devDependencies": {
    "chai": "1.x.x",
    "coveralls": "^2.11.1",
    "istanbul": "^0.3.0",
    "mocha": "1.x.x"
  },
  "directories": {},
  "dist": {
    "shasum": "3cbaf6513fa85ef9dd81c7ab789bb0a6957fb604",
    "tarball": "https://registry.npmjs.org/compute-argmax/-/compute-argmax-1.0.0.tgz"
  },
  "gitHead": "107660b64447f7b70479287a44c3ebabb0765e11",
  "homepage": "https://github.com/compute-io/argmax#readme",
  "keywords": [
    "compute.io",
    "compute",
    "computation",
    "mathematics",
    "math",
    "statistics",
    "stats",
    "array",
    "max",
    "maximum"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib",
  "maintainers": [
    {
      "name": "kgryte",
      "email": "kgryte@gmail.com"
    }
  ],
  "name": "compute-argmax",
  "optionalDependencies": {},
  "readme": "argmax\n===\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Dependencies][dependencies-image]][dependencies-url]\n\n> Computes the maximum value of a numeric array and returns the corresponding array indices.\n\n\n## Installation\n\n``` bash\n$ npm install compute-argmax\n```\n\nFor use in the browser, use [browserify](https://github.com/substack/node-browserify).\n\n\n## Usage\n\nTo use the module,\n\n``` javascript\nvar argmax = require( 'compute-argmax' );\n```\n\n#### argmax( arr )\n\nComputes the maximum value of a numeric `array` and returns the corresponding `array` indices.\n\n``` javascript\nvar data = [ 3, 2, 5, 2, 5 ];\n\nvar idx = argmax( data );\n// returns [2,4]\n```\n\n\n## Examples\n\n``` javascript\nvar argmax = require( 'compute-argmax' );\n\n// Simulate some data...\nvar data = new Array( 100 );\nfor ( var i = 0; i < data.length; i++ ) {\n\tdata[ i ] = Math.round( Math.random()*100 );\n}\nvar idx = argmax( data );\nconsole.log( idx );\n```\n\nTo run the example code from the top-level application directory,\n\n``` bash\n$ node ./examples/index.js\n```\n\n\n## Tests\n\n### Unit\n\nUnit tests use the [Mocha](http://visionmedia.github.io/mocha) test framework with [Chai](http://chaijs.com) assertions. To run the tests, execute the following command in the top-level application directory:\n\n``` bash\n$ make test\n```\n\nAll new feature development should have corresponding unit tests to validate correct functionality.\n\n\n### Test Coverage\n\nThis repository uses [Istanbul](https://github.com/gotwarlost/istanbul) as its code coverage tool. To generate a test coverage report, execute the following command in the top-level application directory:\n\n``` bash\n$ make test-cov\n```\n\nIstanbul creates a `./reports/coverage` directory. To access an HTML version of the report,\n\n``` bash\n$ make view-cov\n```\n\n\n## License\n\n[MIT license](http://opensource.org/licenses/MIT). \n\n\n---\n## Copyright\n\nCopyright &copy; 2014. Athan Reines.\n\n\n[npm-image]: http://img.shields.io/npm/v/compute-argmax.svg\n[npm-url]: https://npmjs.org/package/compute-argmax\n\n[travis-image]: http://img.shields.io/travis/compute-io/argmax/master.svg\n[travis-url]: https://travis-ci.org/compute-io/argmax\n\n[coveralls-image]: https://img.shields.io/coveralls/compute-io/argmax/master.svg\n[coveralls-url]: https://coveralls.io/r/compute-io/argmax?branch=master\n\n[dependencies-image]: http://img.shields.io/david/compute-io/argmax.svg\n[dependencies-url]: https://david-dm.org/compute-io/argmax\n\n[dev-dependencies-image]: http://img.shields.io/david/dev/compute-io/argmax.svg\n[dev-dependencies-url]: https://david-dm.org/dev/compute-io/argmax\n\n[github-issues-image]: http://img.shields.io/github/issues/compute-io/argmax.svg\n[github-issues-url]: https://github.com/compute-io/argmax/issues\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/compute-io/argmax.git"
  },
  "scripts": {
    "coveralls": "istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coveralls/coverage --report lcovonly -- -R spec && cat ./reports/coveralls/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./reports/coveralls",
    "test": "mocha",
    "test-cov": "istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coverage -- -R spec"
  },
  "version": "1.0.0"
}
